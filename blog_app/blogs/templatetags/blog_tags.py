from django import template
from django.db.models import Count
from django.utils.safestring import mark_safe
import markdown

from ..models import Post

register = template.Library()


@register.simple_tag
def total_posts():
    return Post.published.count()


@register.inclusion_tag('post/latest_posts.html')
def show_latest_posts(count=5):
    latest_posts = Post.published.order_by('-publish')[:count]
    return {'latest_posts': latest_posts}


@register.simple_tag
def get_most_commented_posts(count=5):
    return Post.published.annotate(
        total_comments=Count('comments')
    ).order_by('-total_comments')[:count]


@register.filter(name='markdown')
def markdown_format(text):
    """
    To prevent a name clash between our function
    name and markdown module, we name our function
    markdown_format and name the filter markdown,
    for use in the template.
    Django escapes HTML code generated by filters. We
    use the mark_safe method of django to mark the result
    as safe HTML, to be rendered in the template.
    :param text:
    :return:
    """
    return mark_safe(markdown.markdown(text))
